{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","type","id","aboutText","onClick","togglemode","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","console","log","backgroundColor","rows","newtext","toUpperCase","showAlert","toLowerCase","split","length","defaultProps","title","alert","role","word","charAt","slice","msg","App","setMode","setAlert","message","setTimeout","document","body","Alert","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0c80f4c7.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\n// import  {Link} from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">TextUtils</a>\r\n        {/* <Link className=\"navbar-brand\" to=\"/\">TextUtils</Link> */}\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n              {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              {/* <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link> */}\r\n              <a className=\"nav-link\" href=\"/about\">{props.aboutText}</a>\r\n            </li>\r\n          </ul>\r\n          {/* <form classNameclassName=\"d-flex\">\r\n              <input classNameclassName=\"form-control me-2\" typeclassName=\"search\" placeholderclassName=\"Search\" aria-labelclassName=\"Search\"/>\r\n              <button className className=\"btn btn-outline-success\" type className=\"submit\">Search</button>\r\n            </form> */}\r\n          <div className={`form-check form-switch text-${props.mode === 'light'?'dark':'light'}`}>\r\n            <input className=\"form-check-input\" type=\"checkbox\" onClick={props.togglemode} id=\"flexSwitchCheckDefault\" />\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Dark-Mode</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n\r\n  )\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string,\r\n  aboutText: PropTypes.string,\r\n}\r\n\r\nNavbar.defaultProps = {\r\n  title: 'Set title here',\r\n  aboutText: 'About text here'\r\n}","import React, { useState } from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n\r\n    const [text, setText] = useState('Enter Your Text');\r\n\r\n    const Upper = () => {\r\n        console.log('Upper Case clicked' + text)\r\n        let newtext = text.toUpperCase()\r\n        setText(newtext)\r\n        props.showAlert(\"Converted-to-Upper case!\",\"success\")\r\n\r\n    }\r\n    const lower = () => {\r\n        let newtext = text.toLowerCase()\r\n        setText(newtext)\r\n        props.showAlert(\"Converted-to-Lower case!\",\"success\")\r\n    }\r\n\r\n    const remove = () => {\r\n        let newtext = ''\r\n        setText(newtext)\r\n        props.showAlert(\"Data-Erased!\",\"warning\")\r\n\r\n    }\r\n\r\n\r\n    const handleOnChange = (event) => {\r\n        setText(event.target.value)\r\n        console.log('OnChange')\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\" style={{color: props.mode === 'dark' ? 'white' : 'black' }}>\r\n\r\n                <h1>{props.heading}</h1>\r\n                <div className=\"mb-3\">\r\n                    <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{ backgroundColor: props.mode === 'dark' ? 'grey' : 'white',color:props.mode === 'dark' ? 'white' : 'black' }} id=\"mybox\" rows=\"8\"></textarea>\r\n                </div>\r\n                <button className=\"btn btn-primary mx-2\" onClick={Upper}>Capital-Case</button>\r\n                <button className=\"btn btn-primary mx-2\" onClick={lower}>Lower-Case</button>\r\n                <button type=\"button\" className=\"btn btn-danger mx-2 my-2\" onClick={remove}>Remove</button>\r\n\r\n            </div>\r\n            <div className=\"container  my-4\" style={{color: props.mode === 'dark' ? 'white' : 'black' }} >\r\n                <h1>Summery</h1>\r\n                <p>{text.split(' ').length} words, {text.length} charaters</p>\r\n                <p>{0.008 * text.split(' ').length}</p>\r\n                <h2>Preview</h2>\r\n                <p>{text.length>0?text:\"Write in above text-box to preview it\"}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n// rfce\r\nconst cap=(word)=>{\r\n    // const lower  = word.toLowerCase();\r\n    return word.charAt(0).toUpperCase()+word.slice(1);\r\n\r\n\r\n}\r\nfunction alert(props) {\r\n    return (\r\n        \r\n            props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                <strong>{cap(props.alert.type)}</strong>:{props.alert.msg}\r\n                \r\n            </div>\r\n\r\n        \r\n    )\r\n}\r\n\r\nexport default alert\r\n","import './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react'\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setMode] = useState('light')\n  const [alert, setAlert] = useState(null)\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500)\n  }\n\n  const togglemode = () => {\n    if (mode === 'light') {\n      setMode('dark')\n      document.body.style.backgroundColor = 'grey';\n      showAlert('Dark-mode-Activated', 'success');\n    }\n    else {\n      setMode('light')\n      document.body.style.backgroundColor = 'white'\n      showAlert('Dark-mode-Di-activated', 'success');\n    }\n\n  }\n  return (\n\n    <>\n    {/* <Router> */}\n      {/* <Navbar title=\"TextUtils\" aboutText=\"About-Us\"/>  */}\n      <Navbar title=\"TextUtils\" mode={mode} togglemode={togglemode} />\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n      {/* <Switch> */}\n          {/* <Route path=\"/about\"> */}\n            {/* <About /> */}\n          {/* </Route> */}\n          \n  \n          {/* <Route path=\"/\"> */}\n          <TextForm heading=\"Enter Your Text\" mode={mode} showAlert={showAlert} />\n          {/* </Route> */}\n      {/* </Switch> */}\n        \n      </div>\n    {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}